version: 2.1
orbs:
# codecov: codecov/codecov@3.2.4
  rust: circleci/rust@1.6.0

jobs:
  build-and-test:
    parameters:
      rust-version:
        type: string
      debian-version:
        type: string
        default: "bullseye"
      rust-features:
        type: string
        default: ""
    docker:
      - image: rust:<< parameters.rust-version >>-<< parameters.debian-version >>
    environment:
      RUSTFLAGS: '-D warnings'
    steps:
      - checkout
      - run:
          name: Rust Version
          command: rustc --version; cargo --version
      - restore_cache:
          keys:
            - bigdecimal-cargo-<< parameters.rust-version >>-{{ checksum "Cargo.toml" }}
            - bigdecimal-cargo-
      - run:
          name: Check
          command: cargo check
      - save_cache:
          paths:
            - /usr/local/cargo
          key: bigdecimal-cargo-<< parameters.rust-version >>-{{ checksum "Cargo.toml" }}
      - run:
          name: Build
          command: cargo build << parameters.rust-features >>
      - run:
          name: Test
          command: cargo test << parameters.rust-features >>

  upload-coverage:
    parameters:
      rust-version:
        type: string
      debian-version:
        type: string
        default: "bullseye"
    machine: true
    steps:
      - checkout
      - run:
          name: Generate Coverage
          command: >
              docker run
              --security-opt seccomp=unconfined
              -v "${PWD}:/home"
              -e CI=true
              $(bash <(curl -s https://codecov.io/env))
              akubera/rust-codecov:<< parameters.rust-version >>-<< parameters.debian-version >>
              sh -c 'cargo test -q --no-run && kcov-rust && upload-kcov-results-to-codecov'
      - store_artifacts:
          path: target/cov
      # - store_test_results:
      #     path: target

  lint-check:
    docker:
      - image: cimg/rust:1.69
    steps:
      - checkout
      - rust/build
      - rust/format
      # - rust/clippy
      - rust/test
      - run:
          name: Build examples
          command: cargo build --examples

workflows:
  version: 2
  cargo:build-and-test:
    jobs:
    - lint-check
    - build-and-test:
        matrix:
          parameters:
            rust-version:
            - "1.43.1"
            - "1.54.0"
            debian-version:
            - "buster"

    - build-and-test:
       name: build-and-test:latest
       rust-version: "1.69.0"

    - build-and-test:
        matrix:
          parameters:
            rust-version:
            - "1.69.0"
            rust-features:
            - "--features='serde'"
            - "--features='serde,string-only'"

    - build-and-test:
       name: build-and-test:no-default-features
       rust-version: "1.69.0"
       rust-features: "--no-default-features"

    #- upload-coverage:
    #   rust-version: "1.69.0"
    #   requires:
    #    - build-and-test:latest

